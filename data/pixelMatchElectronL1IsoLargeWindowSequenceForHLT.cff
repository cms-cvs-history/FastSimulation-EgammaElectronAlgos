#
# create a sequence with all required modules and sources needed to make
# pixel based electrons
#
# NB: it assumes that ECAL clusters (hybrid) are in the event
#
#

# modules to make seeds, tracks and electrons
# include "RecoEgamma/EgammaHLTProducers/data/egammaHLTChi2MeasurementEstimatorESProducer.cff"

# Cluster-seeded pixel pairs
module hltL1IsoLargeWindowElectronPixelSeeds = electronGSPixelSeeds from "FastSimulation/EgammaElectronAlgos/data/electronGSPixelSeeds.cfi"
# include "RecoEgamma/EgammaHLTProducers/data/pixelSeedConfigurationsForHLT.cfi"
replace hltL1IsoLargeWindowElectronPixelSeeds.SeedConfiguration = { 
    # using l1IsoLargeWindowElectronPixelSeedConfiguration
    using block_hltL1IsoLargeWindowElectronPixelSeeds
}

replace hltL1IsoLargeWindowElectronPixelSeeds.barrelSuperClusters = hltCorrectedHybridSuperClustersL1Isolated
replace hltL1IsoLargeWindowElectronPixelSeeds.endcapSuperClusters = hltCorrectedEndcapSuperClustersWithPreshowerL1Isolated

module hltCkfL1IsoLargeWindowTrackCandidates = trackCandidateProducer from "FastSimulation/Tracking/data/TrackCandidateProducer.cfi"
replace hltCkfL1IsoLargeWindowTrackCandidates.SeedProducer = hltL1IsoLargeWindowElectronPixelSeeds:
replace hltCkfL1IsoLargeWindowTrackCandidates.TrackProducers = { hltCtfL1IsoWithMaterialTracks: }
replace hltCkfL1IsoLargeWindowTrackCandidates.MaxNumberOfCrossedLayers = 999
replace hltCkfL1IsoLargeWindowTrackCandidates.SeedCleaning = true

# CTF track fit with material
module ctfL1IsoLargeWindowTracks = ctfWithMaterialTracks from "RecoTracker/TrackProducer/data/CTFFinalFitWithMaterial.cfi"
replace ctfL1IsoLargeWindowTracks.src = hltCkfL1IsoLargeWindowTrackCandidates
replace ctfL1IsoLargeWindowTracks.TTRHBuilder = "WithoutRefit"
replace ctfL1IsoLargeWindowTracks.Fitter = "KFFittingSmoother"
replace ctfL1IsoLargeWindowTracks.Propagator = "PropagatorWithMaterial"

module hltCtfL1IsoLargeWindowWithMaterialTracks = FastTrackMerger {

    VInputTag TrackProducers = { 
	ctfL1IsoLargeWindowTracks,
	hltCtfL1IsoWithMaterialTracks
    }

    untracked bool SaveTracksOnly = true

}

# Electron collection
# include "RecoEgamma/EgammaHLTProducers/data/pixelMatchElectronsL1IsoLargeWindowForHLT.cff"

# sequence HLTPixelMatchElectronL1IsoLargeWindowSequence = {
#     hltL1IsoLargeWindowElectronPixelSeeds
# }

sequence HLTPixelMatchElectronL1IsoLargeWindowTrackingSequence = {
    hltCkfL1IsoLargeWindowTrackCandidates &
    ctfL1IsoLargeWindowTracks &
    hltCtfL1IsoLargeWindowWithMaterialTracks &
    hltPixelMatchElectronsL1IsoLargeWindow
}
